{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/auth-actions.ts"],"sourcesContent":["// src/app/actions/auth-actions.ts\n'use server';\n\nimport { getUserByEmail, addUser } from '@/lib/data-service';\nimport type { UserData, OrganizerSafeData, OrganizerRegistrationData } from '@/lib/types';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface UnifiedAuthResult {\n  success: boolean;\n  message: string;\n  user?: OrganizerSafeData; // OrganizerSafeData is Omit<UserData, 'password_hash'>\n  userType?: 'admin' | 'organizer';\n}\n\nexport async function unifiedLoginAction(credentials: { email: string; password: string }): Promise<UnifiedAuthResult> {\n  try {\n    const user = await getUserByEmail(credentials.email);\n\n    if (!user) {\n      return { success: false, message: 'Usuário não encontrado.' };\n    }\n\n    // Plain text password comparison (NEVER use in production)\n    const passwordMatch = user.password_hash === credentials.password;\n\n    if (!passwordMatch) {\n      return { success: false, message: 'Senha incorreta.' };\n    }\n\n    if (user.tipo !== 'admin' && user.tipo !== 'organizer') {\n      // This also covers cases where 'tipo' might be 'buyer' or undefined\n      return { success: false, message: 'Acesso negado. Tipo de usuário não permitido para login nesta área.' };\n    }\n    \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { password_hash, ...userWithoutPassword } = user;\n    return { \n      success: true, \n      message: 'Login bem-sucedido!', \n      user: userWithoutPassword, \n      userType: user.tipo as 'admin' | 'organizer' // Safe to cast after validation\n    };\n\n  } catch (error) {\n    console.error('Unified login error:', error);\n    return { success: false, message: 'Ocorreu um erro durante o login. Tente novamente.' };\n  }\n}\n\n\nexport async function organizerRegisterAction(data: OrganizerRegistrationData): Promise<UnifiedAuthResult> {\n  try {\n    const existingUser = await getUserByEmail(data.email);\n    if (existingUser) {\n      return { success: false, message: 'Este e-mail já está cadastrado.' };\n    }\n\n    const hashedPassword = data.password_hash; \n\n    const newUser: UserData = {\n      id: `org-${uuidv4()}`, \n      nome: data.nome,\n      email: data.email,\n      password_hash: hashedPassword,\n      tipo: 'organizer',\n      whatsapp: data.whatsapp,\n    };\n\n    const addedUser = await addUser(newUser);\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { password_hash, ...userWithoutPassword } = addedUser;\n\n    return { \n        success: true, \n        message: 'Cadastro realizado com sucesso!', \n        user: userWithoutPassword,\n        userType: 'organizer' // Explicitly set userType for registration\n    };\n\n  } catch (error)\n {\n    console.error('Organizer registration error:', error);\n    return { success: false, message: 'Ocorreu um erro durante o cadastro. Tente novamente.' };\n  }\n}\n"],"names":[],"mappings":"AAAA,kCAAkC;;;;;;;IAcZ;IAoCA","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/login/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useToast } from '@/hooks/use-toast'; // Keep ShadCN toast\nimport { unifiedLoginAction } from '@/app/actions/auth-actions';\nimport { useAuth } from '@/contexts/AuthContext';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport { LogIn, Loader2, UserPlus } from 'lucide-react';\nimport { useState, useEffect } from 'react';\n\nconst loginSchema = z.object({\n  email: z.string().email({ message: 'E-mail inválido.' }),\n  password: z.string().min(1, { message: 'Senha é obrigatória.' }),\n});\n\ntype LoginFormValues = z.infer<typeof loginSchema>;\n\nexport default function LoginPage() {\n  const { toast } = useToast();\n  const { adminLogin, organizerLogin, isAdminLoggedIn, isOrganizerLoggedIn, isLoading: authIsLoading } = useAuth();\n  const router = useRouter();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const form = useForm<LoginFormValues>({\n    resolver: zodResolver(loginSchema),\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  const { register, handleSubmit, formState: { errors } } = form;\n\n  useEffect(() => {\n    if (!authIsLoading) {\n      if (isAdminLoggedIn) {\n        router.replace('/admin/dashboard');\n      } else if (isOrganizerLoggedIn) {\n        router.replace('/organizer/dashboard');\n      }\n    }\n  }, [authIsLoading, isAdminLoggedIn, isOrganizerLoggedIn, router]);\n\n  if (authIsLoading) {\n     return (\n      <div className=\"d-flex align-items-center justify-content-center min-vh-100\" style={{marginTop: '-56px'}}> {/* Adjust for header height if fixed */}\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n      </div>\n    );\n  }\n  \n  if (isAdminLoggedIn || isOrganizerLoggedIn) {\n    return (\n         <div className=\"d-flex align-items-center justify-content-center min-vh-100\" style={{marginTop: '-56px'}}>\n            <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n            <p className=\"ms-2\">Redirecionando...</p>\n        </div>\n    );\n  }\n\n  const onSubmit: SubmitHandler<LoginFormValues> = async (data) => {\n    setIsSubmitting(true);\n    const result = await unifiedLoginAction(data);\n    setIsSubmitting(false);\n\n    if (result.success && result.user && result.userType) {\n      if (result.userType === 'admin' && result.user) {\n        adminLogin(result.user); \n        toast({\n          title: 'Login de Admin Bem-Sucedido!',\n          description: `Bem-vindo, ${result.user.nome}!`,\n        });\n        router.push('/admin/dashboard');\n      } else if (result.userType === 'organizer' && result.user) {\n        organizerLogin(result.user);\n         toast({\n          title: 'Login de Organizador Bem-Sucedido!',\n          description: `Bem-vindo, ${result.user.nome}!`,\n        });\n        router.push('/organizer/dashboard');\n      } else {\n         toast({\n          title: 'Falha no Login',\n          description: 'Tipo de usuário desconhecido ou dados de usuário ausentes.',\n          variant: 'destructive',\n        });\n      }\n    } else {\n      toast({\n        title: 'Falha no Login',\n        description: result.message,\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <div className=\"d-flex align-items-center justify-content-center min-vh-100 py-5\" style={{marginTop: '-56px'}}> {/* Adjust for header height if fixed */}\n      <div className=\"card border\" style={{width: '100%', maxWidth: '450px'}}> {/* Removed shadow-xl */}\n        <div className=\"card-header p-4 text-center\">\n          <h1 className=\"card-title fs-2 fw-bold text-primary d-flex align-items-center justify-content-center gap-2\">\n            <LogIn className=\"h-8 w-8\" /> Acesso ao Sistema\n          </h1>\n          <p className=\"card-text text-muted\">\n            Faça login para gerenciar eventos ou acessar o painel administrativo.\n          </p>\n        </div>\n        <div className=\"card-body p-4 p-md-5\">\n          <form onSubmit={handleSubmit(onSubmit)} className=\"needs-validation\" noValidate>\n            <div className=\"mb-3\">\n              <label htmlFor=\"email\" className=\"form-label\">E-mail</label>\n              <input\n                id=\"email\"\n                type=\"email\"\n                {...register('email')}\n                className={`form-control ${errors.email ? 'is-invalid' : ''}`}\n                autoComplete=\"email\"\n              />\n              {errors.email && <div className=\"invalid-feedback\">{errors.email.message}</div>}\n            </div>\n\n            <div className=\"mb-4\">\n              <label htmlFor=\"password\" className=\"form-label\">Senha</label>\n              <input\n                id=\"password\"\n                type=\"password\"\n                {...register('password')}\n                className={`form-control ${errors.password ? 'is-invalid' : ''}`}\n                autoComplete=\"current-password\"\n              />\n              {errors.password && <div className=\"invalid-feedback\">{errors.password.message}</div>}\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary w-100 btn-lg fw-semibold\" disabled={isSubmitting}>\n              {isSubmitting ? <Loader2 className=\"me-2 h-4 w-4 animate-spin\" /> : <LogIn className=\"me-2 h-4 w-4\" />}\n              Entrar\n            </button>\n          </form>\n          <div className=\"mt-4 text-center\">\n            <p className=\"text-muted small\">\n              Não tem uma conta de organizador?{' '}\n              <Link href=\"/organizer/register\" className=\"btn btn-secondary btn-sm text-decoration-none\">\n                <UserPlus className=\"me-1 h-4 w-4\" /> Cadastre-se\n              </Link>\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}