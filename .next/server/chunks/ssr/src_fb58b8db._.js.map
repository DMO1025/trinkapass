{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data-service.ts"],"sourcesContent":["// src/lib/data-service.ts\n'use server';\n\nimport fs from 'fs/promises';\nimport path from 'path';\nimport type { EventData, SaleData, NewSaleDataInternal, UserData, EventCreationData, SettingsData } from './types';\nimport { v4 as uuidv4 } from 'uuid'; \n\nconst dataDir = path.join(process.cwd(), 'src', 'data');\nconst eventsFilePath = path.join(dataDir, 'eventos.json');\nconst salesFilePath = path.join(dataDir, 'vendas.json');\nconst usersFilePath = path.join(dataDir, 'usuarios.json');\nconst settingsFilePath = path.join(dataDir, 'settings.json');\n\n// Helper to read JSON\nasync function readJsonFile<T>(filePath: string, defaultValue?: T): Promise<T> {\n  try {\n    await fs.access(filePath);\n  } catch (error) {\n    if ((error as NodeJS.ErrnoException).code === 'ENOENT') {\n      // If file doesn't exist, create it with default value or empty structure\n      const dataToStore = defaultValue !== undefined ? defaultValue : (filePath.endsWith('s.json') || filePath.endsWith('os.json') ? [] : {});\n      await fs.writeFile(filePath, JSON.stringify(dataToStore, null, 2), 'utf-8');\n      return dataToStore as T;\n    }\n    console.error(`Error accessing file ${filePath}:`, error);\n    throw error; // Re-throw other errors\n  }\n  // File exists, proceed to read and parse\n  try {\n    const jsonData = await fs.readFile(filePath, 'utf-8');\n    return JSON.parse(jsonData) as T;\n  } catch (error) {\n    console.error(`Error reading or parsing JSON from ${filePath}:`, error);\n    // Fallback to default value if provided on read/parse error\n    if (defaultValue !== undefined) return defaultValue;\n    // Specific fallback for list-like files if no default is provided\n    if (filePath.endsWith('s.json') || filePath.endsWith('os.json')) { \n      return [] as T; // Treat as empty list on error if it's a list file\n    }\n    throw error; // Re-throw other errors\n  }\n}\n\n// Helper to write JSON\nasync function writeJsonFile<T>(filePath: string, data: T): Promise<void> {\n  try {\n    const jsonData = JSON.stringify(data, null, 2);\n    await fs.writeFile(filePath, jsonData, 'utf-8');\n  } catch (error) {\n    console.error(`Error writing JSON to ${filePath}:`, error);\n    throw error;\n  }\n}\n\n// Settings functions\nexport async function getSettings(): Promise<SettingsData> {\n  return readJsonFile<SettingsData>(settingsFilePath, { mercadoPagoAccessToken: '' });\n}\n\nexport async function updateSettings(newSettings: Partial<SettingsData>): Promise<SettingsData> {\n  const currentSettings = await getSettings();\n  const updatedSettings = { ...currentSettings, ...newSettings };\n  await writeJsonFile(settingsFilePath, updatedSettings);\n  return updatedSettings;\n}\n\n\n// Event functions\nexport async function getEvents(): Promise<EventData[]> {\n  return readJsonFile<EventData[]>(eventsFilePath, []);\n}\n\nexport async function getEventById(id: string): Promise<EventData | undefined> {\n  const events = await getEvents();\n  return events.find(event => event.id === id);\n}\n\nexport async function getEventsByOrganizerId(organizerId: string): Promise<EventData[]> {\n  const events = await getEvents();\n  return events.filter(event => event.organizer_id === organizerId);\n}\n\nexport async function addEvent(eventDetails: EventCreationData, organizerId: string): Promise<EventData> {\n  const events = await getEvents();\n  \n  const newEvent: EventData = {\n    id: `evt-${uuidv4()}`,\n    organizer_id: organizerId,\n    ...eventDetails, \n    quantidade_disponivel: eventDetails.quantidade_total,\n    imagem_url: eventDetails.imagem_url || undefined,\n    next_sale_reference_number: 1, // Initialize counter\n  };\n  events.push(newEvent);\n  await writeJsonFile(eventsFilePath, events);\n  return newEvent;\n}\n\nexport async function updateEventSaleReferenceCounter(eventId: string, newCounterValue: number): Promise<boolean> {\n    const events = await getEvents();\n    const eventIndex = events.findIndex(event => event.id === eventId);\n\n    if (eventIndex === -1) {\n        console.error(`Event with ID ${eventId} not found for counter update.`);\n        return false;\n    }\n    events[eventIndex].next_sale_reference_number = newCounterValue;\n    await writeJsonFile(eventsFilePath, events);\n    console.log(`Event ${eventId} sale reference counter updated to ${newCounterValue}`);\n    return true;\n}\n\n\nexport async function updateEvent(eventId: string, updates: EventCreationData, currentOrganizerId: string): Promise<EventData | null> {\n  const events = await getEvents();\n  const eventIndex = events.findIndex(event => event.id === eventId);\n\n  if (eventIndex === -1) {\n    console.error(`Event with ID ${eventId} not found for update.`);\n    return null; \n  }\n\n  const currentEvent = events[eventIndex];\n\n  if (currentEvent.organizer_id !== currentOrganizerId) {\n    console.error(`Organizer ${currentOrganizerId} does not have permission to update event ${eventId}.`);\n    return null; \n  }\n\n  const ticketsSold = currentEvent.quantidade_total - currentEvent.quantidade_disponivel;\n\n  if (updates.quantidade_total < ticketsSold) {\n    console.error(`Cannot update event ${eventId}: new total quantity (${updates.quantidade_total}) is less than tickets already sold (${ticketsSold}).`);\n    return null; \n  }\n  \n  const newQuantidadeDisponivel = updates.quantidade_total - ticketsSold;\n\n  const updatedEvent: EventData = {\n    ...currentEvent, \n    ...updates,\n    quantidade_disponivel: newQuantidadeDisponivel,\n    imagem_url: updates.imagem_url || currentEvent.imagem_url, // Preserve existing image if not updated\n    next_sale_reference_number: currentEvent.next_sale_reference_number || 1, // Preserve counter or initialize\n  };\n\n  events[eventIndex] = updatedEvent;\n  await writeJsonFile(eventsFilePath, events);\n  return updatedEvent;\n}\n\n\nexport async function deleteEventAndSalesById(eventId: string): Promise<{success: boolean; message?: string}> {\n  try {\n    let events = await getEvents();\n    const eventExists = events.some(event => event.id === eventId);\n    if (!eventExists) {\n      return { success: false, message: 'Evento nÃ£o encontrado.' };\n    }\n    events = events.filter(event => event.id !== eventId);\n    await writeJsonFile(eventsFilePath, events);\n\n    let sales = await getAllSales();\n    sales = sales.filter(sale => sale.evento_id !== eventId);\n    await writeJsonFile(salesFilePath, sales);\n    \n    return { success: true };\n  } catch (error) {\n    console.error('Error deleting event and associated sales:', error);\n    return { success: false, message: 'Erro ao excluir evento e vendas associadas.' };\n  }\n}\n\n\n// Sale functions\nexport async function getAllSales(): Promise<SaleData[]> {\n  return readJsonFile<SaleData[]>(salesFilePath, []);\n}\n\nexport async function getSaleById(id: string): Promise<SaleData | undefined> {\n  const sales = await getAllSales();\n  return sales.find(sale => sale.id === id);\n}\n\nexport async function getSaleByMercadoPagoExternalReference(mpExternalRef: string): Promise<SaleData | undefined> {\n  const sales = await getAllSales();\n  return sales.find(sale => sale.mercado_pago_external_reference === mpExternalRef);\n}\n\n\nexport async function addSale(saleData: NewSaleDataInternal): Promise<SaleData> {\n  const sales = await getAllSales();\n  const newSale: SaleData = {\n    id: `sale-${uuidv4().substring(0, 12)}`, // Shortened internal TrinkaPass Sale ID\n    ...saleData,\n    // mercado_pago_external_reference is already part of saleData from initiatePurchaseAction\n  };\n  sales.push(newSale);\n  await writeJsonFile(salesFilePath, sales);\n  return newSale;\n}\n\nexport async function updateSale(saleId: string, updates: Partial<Omit<SaleData, 'id' | 'evento_id' | 'nome_comprador' | 'email_comprador' | 'whatsapp' | 'quantidade' | 'preco_ingresso_unitario' | 'taxa_servico_unitaria' | 'valor_total_item' | 'valor_total_compra' | 'data_compra' | 'pix_copia_cola_mp' | 'mercado_pago_external_reference' >>): Promise<SaleData | null> {\n  const sales = await getAllSales();\n  const saleIndex = sales.findIndex(s => s.id === saleId);\n  if (saleIndex === -1) {\n    console.error(`Sale with ID ${saleId} not found for update.`);\n    return null;\n  }\n  sales[saleIndex] = { ...sales[saleIndex], ...updates };\n  await writeJsonFile(salesFilePath, sales);\n  return sales[saleIndex];\n}\n\n\nexport async function getSalesByEventId(eventId: string): Promise<SaleData[]> {\n  const sales = await getAllSales();\n  return sales.filter(sale => sale.evento_id === eventId);\n}\n\n\nexport async function updateEventStock(eventId: string, quantityChange: number, newAvailableQuantity?: number): Promise<boolean> {\n  const events = await getEvents(); \n  const eventIndex = events.findIndex(event => event.id === eventId);\n  if (eventIndex === -1) {\n    console.error(`Event with ID ${eventId} not found for stock update.`);\n    return false;\n  }\n\n  const currentEvent = events[eventIndex];\n\n  if (newAvailableQuantity !== undefined) {\n    if (newAvailableQuantity < 0 || newAvailableQuantity > currentEvent.quantidade_total) {\n      console.warn(`Invalid newAvailableQuantity ${newAvailableQuantity} for event ${eventId}. Max total: ${currentEvent.quantidade_total}.`);\n      return false;\n    }\n    currentEvent.quantidade_disponivel = newAvailableQuantity;\n  } else {\n    const proposedAvailable = currentEvent.quantidade_disponivel - quantityChange;\n    if (proposedAvailable < 0) {\n      console.warn(`Not enough stock for event ID ${eventId}. Available: ${currentEvent.quantidade_disponivel}, Requested change: ${quantityChange}`);\n      return false;\n    }\n    if (proposedAvailable > currentEvent.quantidade_total) {\n      console.warn(`Proposed available stock ${proposedAvailable} exceeds total quantity ${currentEvent.quantidade_total} for event ${eventId}. Capping at total.`);\n      currentEvent.quantidade_disponivel = currentEvent.quantidade_total;\n    } else {\n      currentEvent.quantidade_disponivel = proposedAvailable;\n    }\n  }\n  \n  events[eventIndex] = currentEvent;\n  await writeJsonFile(eventsFilePath, events);\n  console.log(`Stock for event ${eventId} updated. New available: ${currentEvent.quantidade_disponivel}`);\n  return true;\n}\n\n\n// User functions\nexport async function getUsers(): Promise<UserData[]> {\n return readJsonFile<UserData[]>(usersFilePath, []);\n}\n\nexport async function getUserById(id: string): Promise<UserData | undefined> {\n  const users = await getUsers();\n  return users.find(user => user.id === id);\n}\n\nexport async function getUserByEmail(email: string): Promise<UserData | undefined> {\n  const users = await getUsers();\n  return users.find(user => user.email === email);\n}\n\nexport async function addUser(userData: UserData): Promise<UserData> {\n  const users = await getUsers();\n  users.push(userData);\n  await writeJsonFile(usersFilePath, users);\n  return userData;\n}\n\nexport async function updateUser(userId: string, updates: Partial<Omit<UserData, 'id' | 'tipo'>>): Promise<UserData | null> {\n  const users = await getUsers();\n  const userIndex = users.findIndex(user => user.id === userId);\n\n  if (userIndex === -1) {\n    console.error(`User with ID ${userId} not found for update.`);\n    return null;\n  }\n\n  const updatedUser: UserData = { ...users[userIndex] };\n\n  if (updates.nome !== undefined) updatedUser.nome = updates.nome;\n  if (updates.email !== undefined) updatedUser.email = updates.email;\n  if (updates.whatsapp !== undefined) updatedUser.whatsapp = updates.whatsapp;\n  if (updates.password_hash !== undefined) updatedUser.password_hash = updates.password_hash;\n  \n  // Add updates for PIX key and ID photo\n  if (updates.pix_key_type !== undefined) {\n    updatedUser.pix_key_type = updates.pix_key_type === '' ? undefined : updates.pix_key_type;\n  }\n  if (updates.pix_key !== undefined) {\n     updatedUser.pix_key = updates.pix_key === '' ? undefined : updates.pix_key;\n  }\n  if (updates.id_photo_data_uri !== undefined) {\n    updatedUser.id_photo_data_uri = updates.id_photo_data_uri === '' ? undefined : updates.id_photo_data_uri;\n  }\n\n  users[userIndex] = updatedUser;\n  await writeJsonFile(usersFilePath, users);\n  return updatedUser;\n}\n\nexport async function deleteUserById(userId: string): Promise<{success: boolean; message?: string}> {\n  try {\n    let users = await getUsers();\n    const userExists = users.some(user => user.id === userId);\n    if (!userExists) {\n      return { success: false, message: 'UsuÃ¡rio nÃ£o encontrado.' };\n    }\n    users = users.filter(user => user.id !== userId);\n    await writeJsonFile(usersFilePath, users);\n    return { success: true };\n  } catch (error) {\n    console.error('Error deleting user:', error);\n    return { success: false, message: 'Erro ao excluir usuÃ¡rio.' };\n  }\n}\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;;;;;;;;;;;;;;;;;;;;;;;;IAwDJ;IAIA;IASA;IAIA;IAKA;IAKA;IAgBA;IAeA;IAuCA;IAuBA;IAIA;IAKA;IAMA;IAYA;IAaA;IAMA;IAsCA;IAIA;IAKA;IAKA;IAOA;IAgCA","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/data-service.server.ts"],"sourcesContent":["// This file is intended to re-export functions from data-service.ts\n// that are safe to be called from server components or server actions.\n// In Next.js 13+ with App Router, direct imports from 'data-service.ts'\n// in server components or actions will run on the server.\n// This file is more for logical separation or if you have specific\n// server-only augmentations. For now, it will just re-export.\n// If you have specific server-only logic, it would go here.\n\nimport { \n    getEvents, \n    getEventById, \n    addSale, \n    updateEventStock, \n    getUsers, \n    getUserById, \n    getUserByEmail,\n    addUser,\n    addEvent,\n    updateEvent, \n    updateUser, \n    getEventsByOrganizerId,\n    getSalesByEventId,\n    getAllSales,\n    deleteUserById,\n    deleteEventAndSalesById,\n    getSettings, // Added getSettings\n    updateSettings // Added updateSettings\n} from './data-service';\n\n// Re-export all functions that are intended for server-side use.\n// This makes it explicit that these are server-side operations when imported from this file.\nexport {\n    getEvents, \n    getEventById, \n    addSale, \n    updateEventStock, \n    getUsers, \n    getUserById, \n    getUserByEmail,\n    addUser,\n    addEvent,\n    updateEvent,\n    updateUser, \n    getEventsByOrganizerId,\n    getSalesByEventId,\n    getAllSales,\n    deleteUserById,\n    deleteEventAndSalesById,\n    getSettings, // Export getSettings\n    updateSettings // Export updateSettings\n};\n\n// Example of a server-only function if you needed one that isn't in data-service.ts\n// export async function getSensitiveServerData(): Promise<any> {\n//   // ... server-only logic, e.g. accessing environment variables directly\n//   return { data: \"sensitive server data\" };\n// }\n\n"],"names":[],"mappings":"AAAA,oEAAoE;AACpE,uEAAuE;AACvE,wEAAwE;AACxE,0DAA0D;AAC1D,mEAAmE;AACnE,8DAA8D;AAC9D,4DAA4D;;;;CA8C5D,oFAAoF;CACpF,iEAAiE;CACjE,4EAA4E;CAC5E,8CAA8C;CAC9C,IAAI","debugId":null}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/admin-actions.ts"],"sourcesContent":["'use server';\n\nimport { deleteUserById, deleteEventAndSalesById } from '@/lib/data-service.server';\nimport { revalidatePath } from 'next/cache';\n\ninterface ActionResult {\n  success: boolean;\n  message: string;\n}\n\nexport async function adminDeleteUserAction(userId: string, currentAdminId: string): Promise<ActionResult> {\n  if (userId === currentAdminId) {\n    return { success: false, message: 'NÃ£o Ã© possÃ­vel excluir o administrador atualmente logado.' };\n  }\n\n  try {\n    const result = await deleteUserById(userId);\n    if (result.success) {\n      revalidatePath('/admin/dashboard');\n      return { success: true, message: 'UsuÃ¡rio excluÃ­do com sucesso.' };\n    }\n    return { success: false, message: result.message || 'Falha ao excluir usuÃ¡rio.' };\n  } catch (error) {\n    console.error('Admin delete user error:', error);\n    return { success: false, message: 'Ocorreu um erro ao excluir o usuÃ¡rio.' };\n  }\n}\n\nexport async function adminDeleteEventAction(eventId: string): Promise<ActionResult> {\n  try {\n    const result = await deleteEventAndSalesById(eventId);\n    if (result.success) {\n      revalidatePath('/admin/dashboard');\n      revalidatePath('/'); // Revalidate homepage if events are listed there\n      revalidatePath(`/event/${eventId}`); // Revalidate specific event page if it exists\n      return { success: true, message: 'Evento e vendas associadas excluÃ­dos com sucesso.' };\n    }\n    return { success: false, message: result.message || 'Falha ao excluir evento.' };\n  } catch (error) {\n    console.error('Admin delete event error:', error);\n    return { success: false, message: 'Ocorreu um erro ao excluir o evento.' };\n  }\n}\n"],"names":[],"mappings":";;;;;;IAUsB;IAkBA","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert-dialog.tsx"],"sourcesContent":["\n\"use client\"\n\nimport * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"@/lib/utils\"\nimport { buttonVariants } from \"@/components/ui/button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-[2000] bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-[2010] grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\", // Removed shadow-lg\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)} // Default variant is 'default' (primary -> now btn-dark)\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"destructive\" }), // Changed from \"secondary\" to \"destructive\" (btn-danger)\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/dashboard/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { ShieldCheck, User, Users, Trash2, Eye, BarChartHorizontalBig, Loader2, AlertTriangle, ShoppingBag, Ticket, DollarSign, TrendingUp, BadgeCheck, BadgeAlert, BadgeX, Send } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useEffect, useState, useMemo } from \"react\";\nimport type { UserData, EventData, SaleData } from \"@/lib/types\";\nimport { getUsers, getEvents, getAllSales } from \"@/lib/data-service.server\";\nimport { adminDeleteUserAction, adminDeleteEventAction } from \"@/app/actions/admin-actions\";\nimport { useToast } from \"@/hooks/use-toast\"; \nimport { AlertDialog, AlertDialogAction, AlertDialogCancel, AlertDialogContent, AlertDialogDescription, AlertDialogFooter, AlertDialogHeader, AlertDialogTitle, AlertDialogTrigger } from \"@/components/ui/alert-dialog\";\nimport { Button as ShadButton } from \"@/components/ui/button\"; \nimport { SERVICE_FEE_PER_TICKET } from \"@/lib/constants\";\n\ninterface CustomerSalesSummary {\n  email: string;\n  name: string;\n  totalTickets: number;\n  totalValue: number;\n}\n\nexport default function AdminDashboardPage() {\n  const { adminUser, isLoading: authLoading } = useAuth();\n  const { toast } = useToast();\n\n  const [users, setUsers] = useState<UserData[]>([]);\n  const [events, setEvents] = useState<EventData[]>([]);\n  const [sales, setSales] = useState<SaleData[]>([]);\n  const [isLoadingData, setIsLoadingData] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  useEffect(() => {\n    async function fetchData() {\n      if (!adminUser) return;\n      setIsLoadingData(true);\n      setError(null);\n      try {\n        const [fetchedUsers, fetchedEvents, fetchedSales] = await Promise.all([\n          getUsers(),\n          getEvents(),\n          getAllSales()\n        ]);\n        setUsers(fetchedUsers);\n        setEvents(fetchedEvents);\n        setSales(fetchedSales.sort((a,b) => new Date(b.data_compra).getTime() - new Date(a.data_compra).getTime())); // Sort sales by date\n      } catch (err) {\n        console.error(\"Failed to fetch admin data:\", err);\n        setError(\"NÃ£o foi possÃ­vel carregar os dados administrativos. Tente novamente mais tarde.\");\n      } finally {\n        setIsLoadingData(false);\n      }\n    }\n\n    if (adminUser && !authLoading) {\n      fetchData();\n    } else if (!authLoading && !adminUser) {\n      setIsLoadingData(false); \n    }\n  }, [adminUser, authLoading]);\n\n  const paidSales = useMemo(() => sales.filter(s => s.status === 'paid'), [sales]);\n\n  const totalGrossSales = useMemo(() => \n    paidSales.reduce((acc, s) => acc + s.valor_total_compra, 0), \n  [paidSales]);\n\n  const totalPlatformRevenue = useMemo(() => \n    paidSales.reduce((acc, s) => acc + (s.taxa_servico_unitaria * s.quantidade), 0), \n  [paidSales]);\n  \n  const totalNetRevenueForOrganizers = useMemo(() => \n    paidSales.reduce((acc, s) => acc + (s.preco_ingresso_unitario * s.quantidade), 0),\n  [paidSales]);\n\n  const totalPaidTicketsSold = useMemo(() =>\n    paidSales.reduce((acc, s) => acc + s.quantidade, 0),\n  [paidSales]);\n  \n  const eventNameMap = useMemo(() => \n    new Map(events.map(e => [e.id, e.nome_evento])), \n  [events]);\n\n  const customerSalesSummary = useMemo(() => {\n    const summary: Record<string, CustomerSalesSummary> = {};\n    sales.forEach(sale => {\n      if (!summary[sale.email_comprador]) {\n        summary[sale.email_comprador] = { \n          email: sale.email_comprador, \n          name: sale.nome_comprador,\n          totalTickets: 0,\n          totalValue: 0\n        };\n      }\n      summary[sale.email_comprador].totalTickets += sale.quantidade;\n      summary[sale.email_comprador].totalValue += sale.valor_total_compra;\n    });\n    return Object.values(summary).sort((a,b) => b.totalValue - a.totalValue);\n  }, [sales]);\n\n  const handleDeleteUser = async (userId: string) => {\n    if (!adminUser?.id) {\n      toast({ title: \"Erro de AutenticaÃ§Ã£o\", description: \"ID do administrador nÃ£o encontrado.\", variant: \"destructive\" });\n      return;\n    }\n    const result = await adminDeleteUserAction(userId, adminUser.id);\n    toast({\n      title: result.success ? \"Sucesso\" : \"Erro\",\n      description: result.message,\n      variant: result.success ? \"default\" : \"destructive\",\n    });\n    if (result.success) {\n      setUsers(prevUsers => prevUsers.filter(u => u.id !== userId));\n    }\n  };\n\n  const handleDeleteEvent = async (eventId: string) => {\n    const result = await adminDeleteEventAction(eventId);\n    toast({\n      title: result.success ? \"Sucesso\" : \"Erro\",\n      description: result.message,\n      variant: result.success ? \"default\" : \"destructive\",\n    });\n    if (result.success) {\n      setEvents(prevEvents => prevEvents.filter(e => e.id !== eventId));\n      setSales(prevSales => prevSales.filter(s => s.evento_id !== eventId));\n    }\n  };\n\n  const getStatusBadgeClass = (status: SaleData['status']) => {\n    switch (status) {\n      case 'paid': return 'bg-success text-white';\n      case 'pending_payment': return 'bg-warning text-dark';\n      case 'failed': case 'cancelled': return 'bg-danger text-white';\n      default: return 'bg-light text-dark border';\n    }\n  };\n\n  const getStatusIcon = (status: SaleData['status']) => {\n    switch (status) {\n      case 'paid': return <BadgeCheck className=\"me-1 h-3 w-3\" />;\n      case 'pending_payment': return <BadgeAlert className=\"me-1 h-3 w-3\" />;\n      case 'failed': case 'cancelled': return <BadgeX className=\"me-1 h-3 w-3\" />;\n      default: return null;\n    }\n  };\n\n  const getStatusText = (status: SaleData['status']) => {\n    switch (status) {\n      case 'paid': return 'Pago';\n      case 'pending_payment': return 'Pendente';\n      case 'failed': return 'Falhou';\n      case 'cancelled': return 'Cancelado';\n      default: return status;\n    }\n  };\n\n  if (authLoading || (isLoadingData && adminUser)) {\n    return (\n      <div className=\"d-flex align-items-center justify-content-center vh-100\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n        <p className=\"ms-3 fs-5\">Carregando painel administrativo...</p>\n      </div>\n    );\n  }\n\n  if (!adminUser) {\n     return (\n      <div className=\"text-center py-5\">\n        <AlertTriangle className=\"mx-auto h-12 w-12 text-danger\" />\n        <h2 className=\"mt-4 fs-2 fw-semibold\">Acesso Negado</h2>\n        <p className=\"mt-2 text-muted\">VocÃª precisa estar logado como administrador.</p>\n        <Link href=\"/login\" className=\"btn btn-primary mt-4\">Fazer Login</Link>\n      </div>\n    );\n  }\n  \n  if (error) {\n    return (\n      <div className=\"text-center py-5\">\n        <AlertTriangle className=\"mx-auto h-12 w-12 text-danger\" />\n        <h2 className=\"mt-4 fs-2 fw-semibold text-danger\">Erro ao Carregar Dados</h2>\n        <p className=\"mt-2 text-muted\">{error}</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container-fluid container-lg py-4\">\n      <div className=\"d-flex flex-column flex-md-row justify-content-between align-items-md-center gap-3 mb-4\">\n        <h1 className=\"display-5 fw-bold text-primary d-flex align-items-center gap-2\">\n          <ShieldCheck className=\"h-8 w-8\" /> Painel Administrativo\n        </h1>\n         {adminUser && (\n            <div className=\"p-2 bg-light rounded-3 d-flex align-items-center gap-2 small text-muted\">\n              <User className=\"h-5 w-5\" />\n              <span className=\"fw-semibold text-dark\">{adminUser.nome}</span>\n            </div>\n          )}\n      </div>\n\n      {/* Manage Users */}\n      <div className=\"card border mb-4\">\n        <div className=\"card-header bg-light p-3\">\n          <h2 className=\"card-title fs-4 fw-semibold d-flex align-items-center gap-2 mb-0\">\n            <Users className=\"text-primary\" /> Gerenciar UsuÃ¡rios ({users.length})\n          </h2>\n          <p className=\"card-text text-muted small\">Visualize e gerencie todos os usuÃ¡rios cadastrados no sistema.</p>\n        </div>\n        <div className=\"card-body p-0\">\n          {users.length > 0 ? (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover table-striped align-middle mb-0\">\n                <thead className=\"table-light\">\n                  <tr>\n                    <th scope=\"col\">Nome</th>\n                    <th scope=\"col\">Email</th>\n                    <th scope=\"col\">Tipo</th>\n                    <th scope=\"col\">WhatsApp</th>\n                    <th scope=\"col\" className=\"text-end\">AÃ§Ãµes</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {users.map((user) => (\n                    <tr key={user.id}>\n                      <td className=\"fw-medium\">{user.nome}</td>\n                      <td>{user.email}</td>\n                      <td><span className={`badge small ${user.tipo === 'admin' ? 'bg-primary text-white' : user.tipo === 'organizer' ? 'bg-secondary text-white' : 'bg-info text-white'}`}>{user.tipo}</span></td>\n                      <td>{user.whatsapp || '-'}</td>\n                      <td className=\"text-end\">\n                        {user.id !== adminUser.id && user.tipo !== 'admin' ? ( \n                          <AlertDialog>\n                            <AlertDialogTrigger asChild>\n                              <ShadButton variant=\"destructive\" size=\"sm\" className=\"btn btn-sm btn-danger p-1\">\n                                <Trash2 className=\"h-4 w-4\" />\n                              </ShadButton>\n                            </AlertDialogTrigger>\n                            <AlertDialogContent>\n                              <AlertDialogHeader><AlertDialogTitle>Confirmar ExclusÃ£o</AlertDialogTitle>\n                                <AlertDialogDescription>\n                                  Tem certeza que deseja excluir o usuÃ¡rio {user.nome} ({user.email})? Esta aÃ§Ã£o nÃ£o pode ser desfeita.\n                                </AlertDialogDescription>\n                              </AlertDialogHeader>\n                              <AlertDialogFooter>\n                                <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                                <AlertDialogAction onClick={() => handleDeleteUser(user.id)} className=\"btn-danger\">Excluir</AlertDialogAction>\n                              </AlertDialogFooter>\n                            </AlertDialogContent>\n                          </AlertDialog>\n                        ) : (\n                           <ShadButton variant=\"secondary\" size=\"sm\" disabled className=\"btn btn-sm p-1 opacity-50\">\n                             <Trash2 className=\"h-4 w-4\" />\n                           </ShadButton>\n                        )}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <p className=\"text-muted text-center p-4\">Nenhum usuÃ¡rio encontrado.</p>\n          )}\n        </div>\n      </div>\n\n      {/* Platform Revenue Report */}\n      <div className=\"card border mb-4\">\n        <div className=\"card-header bg-light p-3\">\n          <h2 className=\"card-title fs-4 fw-semibold d-flex align-items-center gap-2 mb-0\">\n            <DollarSign className=\"text-primary\" /> RelatÃ³rio de Receita da Plataforma\n          </h2>\n          <p className=\"card-text text-muted small\">VisÃ£o geral das finanÃ§as da plataforma TrinkaPass.</p>\n        </div>\n        <div className=\"card-body p-3\">\n          <div className=\"row g-3 mb-4\">\n            <div className=\"col-md-3 col-6\">\n              <div className=\"p-3 bg-light-subtle border rounded-2\">\n                <p className=\"small text-muted mb-0\">Total Bruto Arrecadado</p>\n                <p className=\"fs-5 fw-bold text-primary mb-0\">R$ {totalGrossSales.toFixed(2).replace('.', ',')}</p>\n              </div>\n            </div>\n            <div className=\"col-md-3 col-6\">\n              <div className=\"p-3 bg-light-subtle border rounded-2\">\n                <p className=\"small text-muted mb-0\">Total Taxas TrinkaPass</p>\n                <p className=\"fs-5 fw-bold text-success mb-0\">R$ {totalPlatformRevenue.toFixed(2).replace('.', ',')}</p>\n              </div>\n            </div>\n            <div className=\"col-md-3 col-6\">\n              <div className=\"p-3 bg-light-subtle border rounded-2\">\n                <p className=\"small text-muted mb-0\">Total para Organizadores</p>\n                <p className=\"fs-5 fw-bold text-secondary mb-0\">R$ {totalNetRevenueForOrganizers.toFixed(2).replace('.', ',')}</p>\n              </div>\n            </div>\n            <div className=\"col-md-3 col-6\">\n              <div className=\"p-3 bg-light-subtle border rounded-2\">\n                <p className=\"small text-muted mb-0\">Total Ingressos Pagos</p>\n                <p className=\"fs-5 fw-bold text-info mb-0\">{totalPaidTicketsSold}</p>\n              </div>\n            </div>\n          </div>\n\n          <h3 className=\"fs-5 fw-semibold mb-2\">Detalhes de Todas as Vendas</h3>\n          {sales.length > 0 ? (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover table-striped align-middle mb-0 small\">\n                <thead className=\"table-light\">\n                  <tr>\n                    <th>Evento</th>\n                    <th>Comprador</th>\n                    <th>Email</th>\n                    <th className=\"text-center\">Qtd.</th>\n                    <th className=\"text-end\">PreÃ§o Un. (Org)</th>\n                    <th className=\"text-end\">Taxa Un. (Plat.)</th>\n                    <th className=\"text-end\">Total Venda</th>\n                    <th>Data Compra</th>\n                    <th className=\"text-center\">Status</th>\n                    <th>ID Pag. MP</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {sales.map(sale => (\n                    <tr key={sale.id}>\n                      <td className=\"fw-medium\">{eventNameMap.get(sale.evento_id) || sale.evento_id}</td>\n                      <td>{sale.nome_comprador}</td>\n                      <td>{sale.email_comprador}</td>\n                      <td className=\"text-center\">{sale.quantidade}</td>\n                      <td className=\"text-end\">R$ {sale.preco_ingresso_unitario.toFixed(2).replace('.', ',')}</td>\n                      <td className=\"text-end\">R$ {sale.taxa_servico_unitaria.toFixed(2).replace('.', ',')}</td>\n                      <td className=\"text-end fw-bold\">R$ {sale.valor_total_compra.toFixed(2).replace('.', ',')}</td>\n                      <td>{new Date(sale.data_compra).toLocaleString('pt-BR')}</td>\n                      <td className=\"text-center\">\n                        <span className={`badge small ${getStatusBadgeClass(sale.status)} d-inline-flex align-items-center`}>\n                           {getStatusIcon(sale.status)} {getStatusText(sale.status)}\n                        </span>\n                      </td>\n                      <td>{sale.mp_payment_id || '-'}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <p className=\"text-muted text-center p-4\">Nenhuma venda registrada.</p>\n          )}\n        </div>\n      </div>\n      \n\n      {/* Sales Overview by Customer */}\n      <div className=\"card border mb-4\">\n        <div className=\"card-header bg-light p-3\">\n          <h2 className=\"card-title fs-4 fw-semibold d-flex align-items-center gap-2 mb-0\">\n            <BarChartHorizontalBig className=\"text-primary\" /> VisÃ£o Geral de Vendas (por Cliente)\n          </h2>\n          <p className=\"card-text text-muted small\">Total de ingressos vendidos e valor gasto por cliente.</p>\n        </div>\n        <div className=\"card-body p-0\">\n          {customerSalesSummary.length > 0 ? (\n            <div className=\"table-responsive\">\n              <table className=\"table table-hover table-striped align-middle mb-0\">\n                <thead className=\"table-light\">\n                  <tr>\n                    <th scope=\"col\">Nome do Cliente</th>\n                    <th scope=\"col\">Email do Cliente</th>\n                    <th scope=\"col\" className=\"text-center\">Total de Ingressos</th>\n                    <th scope=\"col\" className=\"text-end\">Valor Total Gasto (R$)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {customerSalesSummary.map((summary) => (\n                    <tr key={summary.email}>\n                      <td className=\"fw-medium\">{summary.name}</td>\n                      <td>{summary.email}</td>\n                      <td className=\"text-center\">{summary.totalTickets}</td>\n                      <td className=\"text-end\">{summary.totalValue.toFixed(2).replace('.', ',')}</td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <p className=\"text-muted text-center p-4\">Nenhuma venda registrada ainda.</p>\n          )}\n        </div>\n      </div>\n\n      {/* Manage Events */}\n      <div className=\"card border\">\n        <div className=\"card-header bg-light p-3\">\n          <h2 className=\"card-title fs-4 fw-semibold d-flex align-items-center gap-2 mb-0\">\n            <ShoppingBag className=\"text-primary\" /> Gerenciar Eventos ({events.length})\n          </h2>\n          <p className=\"card-text text-muted small\">Visualize e gerencie todos os eventos cadastrados.</p>\n        </div>\n        <div className=\"card-body p-3\">\n          {events.length > 0 ? (\n            <div className=\"vstack gap-3\">\n              {events.map((event) => {\n                const organizerPrefix = event.organizer_id.split('-')[1]?.substring(0,4) || 'N/A';\n                const eventDate = new Date(event.data_horario).toLocaleDateString('pt-BR', { day: '2-digit', month: 'short', year: 'numeric' });\n                const displayTitle = `${organizerPrefix} - ${event.nome_evento} - ${eventDate}`;\n                const eventTime = new Date(event.data_horario).toLocaleTimeString('pt-BR', { hour: '2-digit', minute: '2-digit' });\n                return (\n                <div key={event.id} className=\"card overflow-hidden border\">\n                  <div className=\"card-header bg-light-subtle p-3 d-flex flex-column flex-sm-row justify-content-between align-items-sm-center gap-2\">\n                    <div>\n                       <h3 className=\"card-title fs-5 text-primary fw-semibold mb-0\">\n                        {displayTitle}\n                      </h3>\n                      <p className=\"card-text text-muted small mb-0\">\n                        {eventTime} - {event.local}\n                      </p>\n                    </div>\n                    <div className=\"d-flex align-items-center gap-2 mt-2 mt-sm-0\">\n                      <AlertDialog>\n                        <AlertDialogTrigger asChild>\n                           <ShadButton variant=\"destructive\" size=\"sm\" className=\"btn btn-sm btn-danger p-1\"><Trash2 className=\"h-4 w-4\" /></ShadButton>\n                        </AlertDialogTrigger>\n                        <AlertDialogContent>\n                          <AlertDialogHeader><AlertDialogTitle>Confirmar ExclusÃ£o</AlertDialogTitle>\n                            <AlertDialogDescription>Tem certeza que deseja excluir o evento \"{event.nome_evento}\" e todas as suas vendas associadas? Esta aÃ§Ã£o nÃ£o pode ser desfeita.</AlertDialogDescription>\n                          </AlertDialogHeader>\n                          <AlertDialogFooter>\n                            <AlertDialogCancel>Cancelar</AlertDialogCancel>\n                            <AlertDialogAction onClick={() => handleDeleteEvent(event.id)} className=\"btn-danger\">Excluir Evento</AlertDialogAction>\n                          </AlertDialogFooter>\n                        </AlertDialogContent>\n                      </AlertDialog>\n                    </div>\n                  </div>\n                  <div className=\"card-body p-3\">\n                    <div className=\"row row-cols-2 row-cols-md-4 g-3 small\">\n                      <div><p className=\"fw-semibold mb-0\">Total:</p> <p className=\"mb-0\">{event.quantidade_total} ingressos</p></div>\n                      <div><p className=\"fw-semibold mb-0\">Vendidos:</p> <p className=\"mb-0\">{event.quantidade_total - event.quantidade_disponivel} ingressos</p></div>\n                      <div><p className=\"fw-semibold mb-0\">DisponÃ­veis:</p> <p className=\"mb-0\">{event.quantidade_disponivel} ingressos</p></div>\n                      <div>\n                        <Link href={`/admin/events/${event.id}/buyers`} className=\"btn btn-sm btn-primary p-1 d-flex align-items-center gap-1\">\n                            <Eye className=\"h-4 w-4\"/>Ver Compradores\n                        </Link>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              )})}\n            </div>\n          ) : (\n             <p className=\"text-muted text-center p-4\">Nenhum evento encontrado.</p>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}