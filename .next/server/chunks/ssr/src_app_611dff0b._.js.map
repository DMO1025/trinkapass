{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/user-actions.ts"],"sourcesContent":["'use server';\n\nimport { getUserById, updateUser } from '@/lib/data-service.server';\nimport type { UserProfileUpdatePayload, ActionResultWithUser, UserData, OrganizerSafeData } from '@/lib/types';\nimport { revalidatePath } from 'next/cache';\n\nexport async function updateUserProfileAction(\n  userId: string,\n  payload: UserProfileUpdatePayload\n): Promise<ActionResultWithUser> {\n  try {\n    const user = await getUserById(userId);\n    if (!user) {\n      return { success: false, message: 'Usuário não encontrado.' };\n    }\n\n    const updates: Partial<Omit<UserData, 'id' | 'tipo'>> = {};\n\n    if (payload.nome && payload.nome !== user.nome) {\n      updates.nome = payload.nome;\n    }\n    if (payload.email && payload.email !== user.email) {\n      // Consider adding validation if email is already taken by another user if it's meant to be unique\n      updates.email = payload.email;\n    }\n    if (payload.whatsapp !== undefined && payload.whatsapp !== user.whatsapp) {\n      updates.whatsapp = payload.whatsapp;\n    }\n\n    // Handle password change\n    if (payload.newPassword) {\n      if (!payload.currentPassword) {\n        return { success: false, message: 'Senha atual é obrigatória para alterar a senha.' };\n      }\n      // Plain text password comparison (NEVER use in production for real hashing)\n      if (user.password_hash !== payload.currentPassword) {\n        return { success: false, message: 'Senha atual incorreta.' };\n      }\n      // In a real app, hash payload.newPassword here before storing\n      updates.password_hash = payload.newPassword;\n    }\n    \n    if (Object.keys(updates).length === 0) {\n        return { success: true, message: 'Nenhuma alteração detectada.', user: {id: user.id, nome: user.nome, email: user.email, tipo: user.tipo, whatsapp: user.whatsapp }};\n    }\n\n    const updatedUser = await updateUser(userId, updates);\n\n    if (!updatedUser) {\n      return { success: false, message: 'Falha ao atualizar perfil do usuário.' };\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { password_hash, ...safeUpdatedUser } = updatedUser;\n\n    // Revalidate paths if necessary, e.g., if user's name is displayed in many places\n    // revalidatePath('/some-path-displaying-user-info');\n    \n    return { success: true, message: 'Perfil atualizado com sucesso!', user: safeUpdatedUser };\n\n  } catch (error) {\n    console.error('Update user profile error:', error);\n    return { success: false, message: 'Ocorreu um erro ao atualizar o perfil.' };\n  }\n}\n"],"names":[],"mappings":";;;;;IAMsB","debugId":null}},
    {"offset": {"line": 19, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/admin/profile/page.tsx"],"sourcesContent":["\n'use client';\n\nimport { useForm, type SubmitHandler } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useToast } from '@/hooks/use-toast';\nimport { useRouter } from 'next/navigation';\nimport { Save, Loader2, ArrowLeft, UserCog, ShieldAlert } from 'lucide-react';\nimport { useState, useEffect } from 'react';\nimport { useAuth } from '@/contexts/AuthContext';\nimport { updateUserProfileAction } from '@/app/actions/user-actions';\nimport type { UserProfileUpdatePayload } from '@/lib/types';\n\nconst profileSchema = z.object({\n  nome: z.string().min(3, { message: 'Nome deve ter pelo menos 3 caracteres.' }),\n  email: z.string().email({ message: 'E-mail inválido.' }),\n  whatsapp: z.string().regex(/^\\d{10,11}$/, { message: 'WhatsApp inválido (somente números, DDD+Número).' }).optional().or(z.literal('')),\n  currentPassword: z.string().optional(),\n  newPassword: z.string().min(6, { message: 'Nova senha deve ter pelo menos 6 caracteres.' }).optional().or(z.literal('')),\n  confirmNewPassword: z.string().optional(),\n})\n.refine(data => {\n    if (data.newPassword && !data.currentPassword) {\n        return false;\n    }\n    return true;\n}, {\n    message: 'Senha atual é obrigatória para definir uma nova senha.',\n    path: ['currentPassword'],\n})\n.refine(data => data.newPassword === data.confirmNewPassword, {\n  message: 'As novas senhas não coincidem.',\n  path: ['confirmNewPassword'],\n});\n\ntype ProfileFormValues = z.infer<typeof profileSchema>;\n\nexport default function AdminProfilePage() {\n  const { toast } = useToast();\n  const router = useRouter();\n  const { adminUser, adminLogin, isLoading: authIsLoading } = useAuth();\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const form = useForm<ProfileFormValues>({\n    resolver: zodResolver(profileSchema),\n    defaultValues: {\n      nome: '',\n      email: '',\n      whatsapp: '',\n      currentPassword: '',\n      newPassword: '',\n      confirmNewPassword: '',\n    },\n  });\n\n  const { register, handleSubmit, formState: { errors }, reset, setError: setFormError } = form;\n\n  useEffect(() => {\n    if (!authIsLoading && adminUser) {\n      reset({\n        nome: adminUser.nome,\n        email: adminUser.email,\n        whatsapp: adminUser.whatsapp || '',\n      });\n    } else if (!authIsLoading && !adminUser) {\n        router.replace('/login?redirect=/admin/dashboard');\n    }\n  }, [authIsLoading, adminUser, reset, router]);\n\n  if (authIsLoading || !adminUser) {\n    return (\n      <div className=\"d-flex align-items-center justify-content-center min-vh-100\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n        <p className=\"ms-2\">Carregando perfil...</p>\n      </div>\n    );\n  }\n\n  const onSubmit: SubmitHandler<ProfileFormValues> = async (data) => {\n    if (!adminUser?.id) {\n      toast({ title: 'Erro de Autenticação', description: 'ID do administrador não encontrado.', variant: 'destructive' });\n      return;\n    }\n    setIsSubmitting(true);\n\n    const payload: UserProfileUpdatePayload = {\n      nome: data.nome,\n      email: data.email,\n      whatsapp: data.whatsapp || undefined, \n    };\n\n    if (data.newPassword) {\n      payload.currentPassword = data.currentPassword;\n      payload.newPassword = data.newPassword;\n    }\n\n    const result = await updateUserProfileAction(adminUser.id, payload);\n    setIsSubmitting(false);\n\n    if (result.success && result.user) {\n      toast({\n        title: 'Perfil Atualizado!',\n        description: 'Suas informações foram atualizadas com sucesso.',\n        variant: 'default',\n      });\n      adminLogin(result.user); \n      reset({ \n        nome: result.user.nome,\n        email: result.user.email,\n        whatsapp: result.user.whatsapp || '',\n        currentPassword: '',\n        newPassword: '',\n        confirmNewPassword: '',\n      });\n    } else {\n      toast({\n        title: 'Falha ao Atualizar Perfil',\n        description: result.message,\n        variant: 'destructive',\n      });\n       if (result.message.toLowerCase().includes(\"senha atual incorreta\")) {\n        setFormError(\"currentPassword\", { type: \"server\", message: result.message });\n      }\n    }\n  };\n\n  return (\n    <div className=\"container-fluid container-md py-4 py-md-5\" style={{maxWidth: '720px'}}>\n      <button onClick={() => router.push('/admin/dashboard')} className=\"btn btn-secondary mb-4 d-flex align-items-center gap-2\">\n        <ArrowLeft className=\"me-2 h-4 w-4\" /> Voltar para o Painel\n      </button>\n      <div className=\"card shadow-xl\">\n        <div className=\"card-header p-3 p-md-4 bg-light\">\n          <h1 className=\"card-title fs-2 fw-bold text-primary d-flex align-items-center gap-2\">\n            <UserCog className=\"h-8 w-8\" /> Editar Perfil de Administrador\n          </h1>\n          <p className=\"card-text text-muted\">\n            Atualize suas informações pessoais e senha.\n          </p>\n        </div>\n        <div className=\"card-body p-3 p-md-4\">\n          <form onSubmit={handleSubmit(onSubmit)} className=\"needs-validation\" noValidate>\n            <div className=\"mb-3\">\n              <label htmlFor=\"nome\" className=\"form-label\">Nome</label>\n              <input id=\"nome\" {...register('nome')} className={`form-control ${errors.nome ? 'is-invalid' : ''}`} />\n              {errors.nome && <div className=\"invalid-feedback\">{errors.nome.message}</div>}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"email\" className=\"form-label\">E-mail</label>\n              <input id=\"email\" type=\"email\" {...register('email')} className={`form-control ${errors.email ? 'is-invalid' : ''}`} />\n              {errors.email && <div className=\"invalid-feedback\">{errors.email.message}</div>}\n            </div>\n\n            <div className=\"mb-3\">\n              <label htmlFor=\"whatsapp\" className=\"form-label\">WhatsApp (Opcional)</label>\n              <input id=\"whatsapp\" type=\"tel\" {...register('whatsapp')} className={`form-control ${errors.whatsapp ? 'is-invalid' : ''}`} placeholder=\"Ex: 11988887777\" />\n              {errors.whatsapp && <div className=\"invalid-feedback\">{errors.whatsapp.message}</div>}\n            </div>\n            \n            <div className=\"card p-3 p-md-4 mb-4 border-primary-subtle\">\n              <h3 className=\"fs-5 fw-semibold text-primary mb-2 d-flex align-items-center gap-1\"><ShieldAlert size={20}/> Alterar Senha</h3>\n              <p className=\"small text-muted mb-3\">Deixe em branco se não deseja alterar a senha.</p>\n              <div className=\"vstack gap-3\">\n                <div>\n                  <label htmlFor=\"currentPassword\" className=\"form-label\">Senha Atual</label>\n                  <input id=\"currentPassword\" type=\"password\" {...register('currentPassword')} className={`form-control ${errors.currentPassword ? 'is-invalid' : ''}`} autoComplete=\"current-password\" />\n                  {errors.currentPassword && <div className=\"invalid-feedback\">{errors.currentPassword.message}</div>}\n                </div>\n                <div>\n                  <label htmlFor=\"newPassword\" className=\"form-label\">Nova Senha</label>\n                  <input id=\"newPassword\" type=\"password\" {...register('newPassword')} className={`form-control ${errors.newPassword ? 'is-invalid' : ''}`} autoComplete=\"new-password\" />\n                  {errors.newPassword && <div className=\"invalid-feedback\">{errors.newPassword.message}</div>}\n                </div>\n                <div>\n                  <label htmlFor=\"confirmNewPassword\" className=\"form-label\">Confirmar Nova Senha</label>\n                  <input id=\"confirmNewPassword\" type=\"password\" {...register('confirmNewPassword')} className={`form-control ${errors.confirmNewPassword ? 'is-invalid' : ''}`} autoComplete=\"new-password\" />\n                  {errors.confirmNewPassword && <div className=\"invalid-feedback\">{errors.confirmNewPassword.message}</div>}\n                </div>\n              </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn btn-primary w-100 btn-lg fw-semibold d-flex align-items-center justify-content-center gap-2\" disabled={isSubmitting}>\n              {isSubmitting ? <Loader2 className=\"me-2 h-4 w-4 animate-spin\" /> : <Save className=\"me-2 h-4 w-4\" />}\n              Salvar Alterações\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}