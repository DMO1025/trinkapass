{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/actions/purchase-actions.ts"],"sourcesContent":["// src/app/actions/purchase-actions.ts\n'use server';\n\nimport { \n  addSale, \n  getEventById, \n  updateEventStock, \n  getUserById, \n  getSaleById, // Keep for direct sale lookup if needed elsewhere, but webhook will use mpExternalRef\n  updateSale,\n  updateEventSaleReferenceCounter, // New function to update event counter\n  getSaleByMercadoPagoExternalReference \n} from '@/lib/data-service';\nimport type { PurchaseInitiationData, SaleData, UserData, NewSaleDataInternal, CheckPaymentStatusResult, InitiatePurchaseResult } from '@/lib/types';\nimport { SERVICE_FEE_PER_TICKET } from '@/lib/constants';\nimport { createPixPaymentMP, getPaymentStatusMP } from '@/services/mercado-pago-service';\n// import { v4 as uuidv4 } from 'uuid'; // No longer needed for tempSaleId if mpExternalReference is the primary external key for MP\nimport { revalidatePath } from 'next/cache';\n\nexport async function initiatePurchaseAction(purchaseData: PurchaseInitiationData): Promise<InitiatePurchaseResult> {\n  try {\n    const event = await getEventById(purchaseData.evento_id);\n    if (!event) {\n      return { success: false, error: 'Evento não encontrado.' };\n    }\n    if (event.quantidade_disponivel < purchaseData.quantidade) {\n      return { success: false, error: 'Ingressos insuficientes disponíveis.' };\n    }\n\n    // Generate sequential external reference for Mercado Pago\n    const currentCounter = event.next_sale_reference_number || 1;\n    const eventIdPart = event.id.startsWith('evt-') ? event.id.substring(4, 12) : event.id.substring(0,8);\n    const mercadoPagoExternalReference = `TRK-${eventIdPart}-${String(currentCounter).padStart(9, '0')}`;\n\n    const precoIngressoUnitario = event.preco_ingresso;\n    const taxaServicoUnitaria = SERVICE_FEE_PER_TICKET;\n    const valorTotalItem = precoIngressoUnitario + taxaServicoUnitaria;\n    const valorTotalCompra = valorTotalItem * purchaseData.quantidade;\n\n    const mpResult = await createPixPaymentMP(\n      valorTotalCompra,\n      `Ingressos para ${event.nome_evento} (TrinkaPass)`,\n      purchaseData.email_comprador,\n      mercadoPagoExternalReference // Use the new sequential reference for MP\n    );\n\n    if (!mpResult.success || !mpResult.pixCopyPaste || !mpResult.paymentId) {\n      return { success: false, error: mpResult.error || 'Falha ao gerar PIX com o Mercado Pago.' };\n    }\n\n    // Update event counter after successful MP PIX generation\n    const counterUpdated = await updateEventSaleReferenceCounter(event.id, currentCounter + 1);\n    if (!counterUpdated) {\n      console.error(`CRITICAL: Failed to update sale reference counter for event ${event.id} after MP PIX generation. Expected next: ${currentCounter + 1}`);\n    }\n\n    const newSaleRecord: NewSaleDataInternal = {\n      evento_id: purchaseData.evento_id,\n      nome_comprador: purchaseData.nome_comprador,\n      email_comprador: purchaseData.email_comprador,\n      whatsapp: purchaseData.whatsapp,\n      quantidade: purchaseData.quantidade,\n      preco_ingresso_unitario: precoIngressoUnitario,\n      taxa_servico_unitaria: taxaServicoUnitaria,\n      valor_total_item: valorTotalItem,\n      valor_total_compra: valorTotalCompra,\n      data_compra: new Date().toISOString(),\n      status: 'pending_payment', \n      pix_copia_cola_mp: mpResult.pixCopyPaste,\n      mp_payment_id: mpResult.paymentId, \n      mercado_pago_external_reference: mercadoPagoExternalReference,\n    };\n\n    const createdSale = await addSale(newSaleRecord); \n    \n    return {\n      success: true,\n      pixCopyPaste: mpResult.pixCopyPaste,\n      qrCodeBase64: mpResult.qrCodeBase64,\n      saleId: createdSale.id, \n      totalAmount: valorTotalCompra,\n      mpPaymentId: mpResult.paymentId,\n      mpExternalReference: mercadoPagoExternalReference, \n    };\n\n  } catch (error) {\n    console.error('Error initiating purchase:', error);\n    let errorMessage = 'Ocorreu um erro ao iniciar sua compra.';\n    if (error instanceof Error) {\n      errorMessage = error.message;\n    }\n    return { success: false, error: errorMessage };\n  }\n}\n\nexport async function checkPaymentStatusAction(mpPaymentId: string, mpExternalReference?: string): Promise<CheckPaymentStatusResult> {\n  if (!mpPaymentId) {\n    return { success: false, message: 'ID do Pagamento do Mercado Pago não fornecido.' };\n  }\n\n  try {\n    const mpApiResult = await getPaymentStatusMP(mpPaymentId);\n\n    if (!mpApiResult.success || !mpApiResult.status) {\n      return { \n        success: false, \n        message: mpApiResult.error || 'Falha ao verificar status do pagamento com Mercado Pago.',\n        mpPaymentId: mpPaymentId,\n        saleId: mpExternalReference || mpApiResult.externalReference \n      };\n    }\n\n    let userMessage = `Status do Pagamento: ${mpApiResult.status}`;\n    let organizerWhatsAppNumber: string | undefined;\n    let prefilledWhatsAppMessageToOrganizer: string | undefined;\n    \n    const effectiveExternalReference = mpApiResult.externalReference || mpExternalReference;\n\n    if (mpApiResult.status === 'approved' && effectiveExternalReference) {\n      const saleToConfirm = await getSaleByMercadoPagoExternalReference(effectiveExternalReference);\n      if (saleToConfirm) {\n        if (saleToConfirm.status === 'pending_payment') {\n          console.log(`checkPaymentStatusAction: Confirming sale ${saleToConfirm.id} (MP Ext Ref: ${effectiveExternalReference}) based on MP status 'approved'. Current DB status: '${saleToConfirm.status}'.`);\n          const updatedSale = await updateSale(saleToConfirm.id, {\n              status: 'paid',\n              data_pagamento_confirmado: new Date().toISOString(),\n              mp_payment_id: mpApiResult.paymentId, \n          });\n\n          if (updatedSale) {\n              console.log(`checkPaymentStatusAction: Sale ${updatedSale.id} status updated to 'paid'. Updating stock.`);\n              const stockUpdated = await updateEventStock(updatedSale.evento_id, updatedSale.quantidade);\n              if (!stockUpdated) {\n                  console.error(`checkPaymentStatusAction: CRITICAL - Failed to update stock for event ${updatedSale.evento_id} after sale ${updatedSale.id} confirmation.`);\n              } else {\n                  console.log(`checkPaymentStatusAction: Stock for event ${updatedSale.evento_id} updated.`);\n              }\n              revalidatePath('/');\n              revalidatePath(`/event/${updatedSale.evento_id}`);\n              revalidatePath('/admin/dashboard'); \n              revalidatePath(`/admin/events/${updatedSale.evento_id}/buyers`); \n              revalidatePath('/organizer/dashboard'); \n              revalidatePath(`/organizer/events/${updatedSale.evento_id}/buyers`); \n              console.log(`checkPaymentStatusAction: Paths revalidated for sale ${updatedSale.id}.`);\n          } else {\n               console.error(`checkPaymentStatusAction: Failed to update sale ${saleToConfirm.id} in DB.`);\n          }\n        } else {\n            console.log(`checkPaymentStatusAction: Sale ${saleToConfirm.id} (MP Ext Ref: ${effectiveExternalReference}) is already in status '${saleToConfirm.status}'. No DB update needed by manual check.`);\n        }\n        \n        // Prepare WhatsApp info regardless of DB update if MP says approved\n        const event = await getEventById(saleToConfirm.evento_id);\n        if (event && event.organizer_id) {\n            const organizer = await getUserById(event.organizer_id);\n            if (organizer && organizer.whatsapp) {\n                organizerWhatsAppNumber = `55${organizer.whatsapp.replace(/\\D/g, '')}`;\n                prefilledWhatsAppMessageToOrganizer = \n`Olá ${organizer.nome || 'Organizador(a)'},\nUma compra de ${saleToConfirm.quantidade} ingresso(s) para o seu evento \"${event.nome_evento}\" (TrinkaPass) foi APROVADA!\nReferência da Compra (Mercado Pago): ${effectiveExternalReference}.\nID da Venda (TrinkaPass): ${saleToConfirm.id}.\nValor total da compra: R$ ${saleToConfirm.valor_total_compra.toFixed(2).replace('.', ',')}.\nNome do Comprador: ${saleToConfirm.nome_comprador}.\nObrigado(a)!`;\n            }\n        }\n      } else {\n          console.warn(`checkPaymentStatusAction: Sale with MP External Reference ${effectiveExternalReference} not found, but MP API reported 'approved'.`);\n          // User message will be set below if not 'approved'\n      }\n      userMessage = 'Pagamento Aprovado!'; // This is the primary message if MP status is 'approved'\n    } else { // Handle non-approved statuses from MP\n        switch (mpApiResult.status) {\n        case 'pending_payment':\n        case 'in_process':\n        case 'pending':\n            userMessage = 'Pagamento ainda está pendente ou em processamento.';\n            break;\n        case 'rejected':\n            userMessage = 'Pagamento Rejeitado.';\n            break;\n        case 'cancelled':\n            userMessage = 'Pagamento Cancelado.';\n            break;\n        case 'refunded':\n            userMessage = 'Pagamento Estornado.';\n            break;\n        case 'charged_back':\n            userMessage = 'Pagamento Revertido (Chargeback).';\n            break;\n        default:\n            userMessage = `Status do pagamento: ${mpApiResult.status || 'Desconhecido'}. Aguarde a confirmação.`;\n        }\n    }\n\n    return {\n      success: true,\n      paymentStatus: mpApiResult.status, // Return the actual status from MP API\n      message: userMessage,\n      saleId: effectiveExternalReference, \n      mpPaymentId: mpApiResult.paymentId,\n      organizerWhatsAppNumber,\n      prefilledWhatsAppMessageToOrganizer,\n    };\n\n  } catch (error) {\n    console.error(`Error in checkPaymentStatusAction for MP Payment ID ${mpPaymentId}:`, error);\n    return { \n      success: false, \n      message: 'Ocorreu um erro interno ao verificar o status do pagamento.',\n      mpPaymentId: mpPaymentId,\n      saleId: mpExternalReference\n    };\n  }\n}\n"],"names":[],"mappings":"AAAA,sCAAsC;;;;;;;IAmBhB;IA4EA","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/constants.ts"],"sourcesContent":["// src/lib/constants.ts\nexport const SERVICE_FEE_PER_TICKET = 2.00; // R$ 2,00\n"],"names":[],"mappings":"AAAA,uBAAuB;;;;AAChB,MAAM,yBAAyB,MAAM,UAAU","debugId":null}},
    {"offset": {"line": 33, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,kKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,kKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,8OAAC,kKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,8OAAC,oNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,gNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;AAGzB,qBAAqB,WAAW,GAAG,kKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,oNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;AAG3B,uBAAuB,WAAW,GAChC,kKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,8OAAC,kKAAA,CAAA,SAAsB;kBACrB,cAAA,8OAAC,kKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,8OAAC;;;;;8BACD,8OAAC,kKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,8OAAC;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,kKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG,kKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,kKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,8OAAC;gBAAK,WAAU;0BACd,cAAA,8OAAC,kKAAA,CAAA,gBAA6B;8BAC5B,cAAA,8OAAC,oMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,8OAAC,kKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,kKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,kKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG,kKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 225, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nexport interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAIA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 253, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/purchase-form.tsx"],"sourcesContent":["\n'use client';\n\nimport type { EventData, PurchaseFormValues } from '@/lib/types';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport * as z from 'zod';\nimport { useToast } from '@/hooks/use-toast';\nimport { useState, useEffect, useMemo } from 'react';\nimport { Loader2, ShoppingCart, ClipboardCopy, CreditCard, AlertTriangle, Info, CheckCircle, RefreshCw } from 'lucide-react';\nimport Image from 'next/image';\nimport { initiatePurchaseAction, checkPaymentStatusAction } from '@/app/actions/purchase-actions';\nimport { SERVICE_FEE_PER_TICKET } from '@/lib/constants';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select'; // Keep ShadCN Select\nimport { cn } from '@/lib/utils'; // For ShadCN components\nimport { Textarea } from '@/components/ui/textarea';\n\n\ninterface PurchaseFormProps {\n  event: EventData;\n}\n\nconst purchaseSchema = z.object({\n  nome_comprador: z.string().min(3, { message: 'Nome completo é obrigatório e deve ter pelo menos 3 caracteres.' }),\n  email_comprador: z.string().email({ message: 'E-mail inválido.' }),\n  whatsapp: z.string().regex(/^\\d{10,11}$/, { message: 'WhatsApp inválido. Use apenas números (Ex: 11988887777).' }),\n  quantidade: z.number().min(1, { message: 'Selecione pelo menos 1 ingresso.' }).max(5, {message: 'Máximo de 5 ingressos por compra.'}),\n});\n\ninterface StoredPurchaseDetails {\n  eventId: string;\n  pixCopyPaste: string;\n  qrCodeBase64: string | null;\n  saleId: string;\n  totalAmount: number;\n  mpPaymentId: string;\n  mpExternalReference: string;\n  formValues?: PurchaseFormValues;\n}\n\nexport default function PurchaseForm({ event }: PurchaseFormProps) {\n  const { toast } = useToast();\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isCheckingStatus, setIsCheckingStatus] = useState(false);\n  const [showPaymentDetails, setShowPaymentDetails] = useState(false);\n  const [currentPixCode, setCurrentPixCode] = useState<string | null>(null);\n  const [currentQrCodeBase64, setCurrentQrCodeBase64] = useState<string | null>(null);\n  const [currentSaleId, setCurrentSaleId] = useState<string | null>(null);\n  const [currentTotalAmount, setCurrentTotalAmount] = useState<number>(0);\n  const [currentMpPaymentId, setCurrentMpPaymentId] = useState<string | null>(null);\n  const [currentMpExternalReference, setCurrentMpExternalReference] = useState<string | null>(null);\n  const [paymentConfirmedByClientCheck, setPaymentConfirmedByClientCheck] = useState(false);\n  \n  const [maxTickets, setMaxTickets] = useState(5); \n\n  const storageKey = useMemo(() => `trinkapass_pending_purchase_${event?.id}`, [event?.id]);\n\n  const form = useForm<PurchaseFormValues>({\n    resolver: zodResolver(purchaseSchema),\n    defaultValues: {\n      nome_comprador: '',\n      email_comprador: '',\n      whatsapp: '',\n      quantidade: 1,\n    },\n  });\n\n  const { register, handleSubmit, control, watch, formState: { errors }, reset, getValues } = form;\n  const selectedQuantity = watch('quantidade') || 0;\n\n  const totalEventPrice = useMemo(() => event.preco_ingresso * selectedQuantity, [event.preco_ingresso, selectedQuantity]);\n  const totalServiceFee = useMemo(() => SERVICE_FEE_PER_TICKET * selectedQuantity, [selectedQuantity]);\n  const finalPurchaseAmount = useMemo(() => totalEventPrice + totalServiceFee, [totalEventPrice, totalServiceFee]);\n\n  useEffect(() => {\n    setMaxTickets(Math.min(5, event.quantidade_disponivel));\n  }, [event.quantidade_disponivel]);\n\n  useEffect(() => {\n    if (!event?.id) return;\n    const storedPurchaseDataString = localStorage.getItem(storageKey);\n    if (storedPurchaseDataString) {\n      try {\n        const parsedData: StoredPurchaseDetails = JSON.parse(storedPurchaseDataString);\n        if (parsedData.eventId === event.id) {\n          setCurrentPixCode(parsedData.pixCopyPaste);\n          setCurrentQrCodeBase64(parsedData.qrCodeBase64 || null);\n          setCurrentSaleId(parsedData.saleId);\n          setCurrentTotalAmount(parsedData.totalAmount);\n          setCurrentMpPaymentId(parsedData.mpPaymentId);\n          setCurrentMpExternalReference(parsedData.mpExternalReference);\n          if (parsedData.formValues) reset(parsedData.formValues);\n          setShowPaymentDetails(true);\n        } else {\n          localStorage.removeItem(storageKey);\n        }\n      } catch (e) {\n        console.error(\"Error parsing pending purchase data from localStorage\", e);\n        localStorage.removeItem(storageKey);\n      }\n    }\n  }, [event?.id, storageKey, reset]);\n\n  useEffect(() => {\n    if (paymentConfirmedByClientCheck && event?.id) {\n      localStorage.removeItem(storageKey);\n    }\n  }, [paymentConfirmedByClientCheck, event?.id, storageKey]);\n\n  const onSubmit: SubmitHandler<PurchaseFormValues> = async (data) => {\n    setIsProcessing(true); \n    setPaymentConfirmedByClientCheck(false);\n    \n    const result = await initiatePurchaseAction({ evento_id: event.id, ...data });\n\n    if (result.success && result.pixCopyPaste && result.saleId && result.totalAmount && result.mpPaymentId && result.mpExternalReference) {\n      setCurrentPixCode(result.pixCopyPaste);\n      setCurrentQrCodeBase64(result.qrCodeBase64 || null);\n      setCurrentSaleId(result.saleId); \n      setCurrentTotalAmount(result.totalAmount);\n      setCurrentMpPaymentId(result.mpPaymentId);\n      setCurrentMpExternalReference(result.mpExternalReference);\n      setShowPaymentDetails(true);\n\n      const purchaseToStore: StoredPurchaseDetails = {\n        eventId: event.id,\n        pixCopyPaste: result.pixCopyPaste,\n        qrCodeBase64: result.qrCodeBase64 || null,\n        saleId: result.saleId,\n        totalAmount: result.totalAmount,\n        mpPaymentId: result.mpPaymentId,\n        mpExternalReference: result.mpExternalReference,\n        formValues: getValues(),\n      };\n      localStorage.setItem(storageKey, JSON.stringify(purchaseToStore));\n      \n      toast({\n        title: 'PIX Gerado com Sucesso!',\n        description: 'Copie o código PIX ou escaneie o QR Code para finalizar. A confirmação será automática.',\n        variant: 'default',\n        duration: 8000,\n      });\n    } else {\n       toast({ title: 'Erro ao Iniciar Compra', description: result.error || 'Não foi possível gerar os detalhes de pagamento. Tente novamente.', variant: 'destructive'});\n    }\n    setIsProcessing(false); \n  };\n\n  const handleCopyPixCode = async () => {\n    if (!currentPixCode) return;\n    try {\n      await navigator.clipboard.writeText(currentPixCode);\n      toast({ title: 'Código PIX Copiado!', description: 'O código PIX foi copiado para a área de transferência.', variant: 'default'});\n    } catch (err) {\n      console.error('Failed to copy PIX code: ', err);\n      toast({ title: 'Erro ao Copiar', description: 'Não foi possível copiar o código PIX. Tente manualmente.', variant: 'destructive'});\n    }\n  };\n\n  const handleCheckPaymentStatus = async () => {\n    if (!currentMpPaymentId) {\n      toast({ title: 'Erro', description: 'ID de pagamento não encontrado para verificação.', variant: 'destructive' });\n      return;\n    }\n    setIsCheckingStatus(true);\n    const result = await checkPaymentStatusAction(currentMpPaymentId, currentMpExternalReference || undefined);\n    setIsCheckingStatus(false);\n\n    if (result.success && result.paymentStatus === 'approved') {\n      setPaymentConfirmedByClientCheck(true); \n      localStorage.removeItem(storageKey);\n      if (result.organizerWhatsAppNumber && result.prefilledWhatsAppMessageToOrganizer) {\n        const whatsappUrl = `https://wa.me/${result.organizerWhatsAppNumber}?text=${encodeURIComponent(result.prefilledWhatsAppMessageToOrganizer)}`;\n        window.open(whatsappUrl, '_blank');\n        toast({ title: \"Pagamento Confirmado!\", description: result.message + \" Você será redirecionado para o WhatsApp para informar o organizador.\", variant: \"default\", duration: 10000 });\n      } else {\n         toast({ title: 'Pagamento Aprovado!', description: result.message, variant: 'default' });\n      }\n    } else {\n       toast({ title: result.success ? 'Status do Pagamento' : 'Erro ao Verificar Status', description: result.message, variant: result.success ? 'default' : 'destructive' });\n    }\n  };\n  \n  const resetFormAndHideDetails = (clearStorage = true) => {\n    setShowPaymentDetails(false); setCurrentPixCode(null); setCurrentQrCodeBase64(null); setCurrentSaleId(null);\n    setCurrentMpPaymentId(null); setCurrentMpExternalReference(null); setPaymentConfirmedByClientCheck(false);\n    setIsProcessing(false); form.reset(); \n    if (clearStorage && event?.id) localStorage.removeItem(storageKey);\n  };\n\n  if (showPaymentDetails && currentPixCode) {\n    return (\n      <div className=\"card shadow-lg rounded-3 mx-auto\" style={{maxWidth: '500px'}}>\n        <div className=\"card-header p-4 bg-light\">\n          <h2 className=\"card-title fs-4 text-center text-primary d-flex align-items-center justify-content-center gap-2 mb-0\">\n            <CreditCard className=\"h-7 w-7\" /> {paymentConfirmedByClientCheck ? 'Pagamento Confirmado!' : 'Finalize seu Pagamento'}\n          </h2>\n          {!paymentConfirmedByClientCheck && (\n            <p className=\"card-text text-center text-muted small pt-1\">\n              Use o PIX Copia e Cola ou escaneie o QR Code abaixo no seu app bancário.\n            </p>\n          )}\n        </div>\n        <div className=\"card-body p-4\">\n          {paymentConfirmedByClientCheck ? (\n            <div className=\"text-center p-3 bg-success-subtle border border-success rounded-3\">\n                <CheckCircle className=\"h-16 w-16 text-success mx-auto mb-3\" />\n                <p className=\"fs-5 fw-semibold text-success\">Seu pagamento foi aprovado!</p>\n                <p className=\"small text-success-emphasis\">A confirmação foi processada. Seus ingressos estão garantidos! Se aplicável, você foi redirecionado para notificar o organizador via WhatsApp.</p>\n                 <button onClick={() => resetFormAndHideDetails(true)} className=\"btn btn-primary w-100 mt-3\">\n                    Comprar Mais Ingressos\n                </button>\n            </div>\n          ) : (\n            <div className=\"vstack gap-4\">\n              {currentQrCodeBase64 ? (\n                <div className=\"d-flex justify-content-center p-3 bg-light rounded-3\">\n                  <Image src={`data:image/png;base64,${currentQrCodeBase64}`} alt={`QR Code para ${event.nome_evento}`} width={200} height={200} className=\"rounded shadow-sm\" data-ai-hint=\"payment QR code\"/>\n                </div>\n              ) : (\n                <div className=\"d-flex justify-content-center p-3 bg-light rounded-3 position-relative\" style={{height: '200px'}}>\n                  <Image src={event.imagem_url || `https://picsum.photos/seed/${event.id}/400/200`} alt={`Imagem ${event.nome_evento}`} layout=\"fill\" objectFit=\"cover\" className=\"rounded shadow-sm\" data-ai-hint=\"event image banner\"/>\n                </div>\n              )}\n              <div>\n                <label htmlFor=\"pixCode\" className=\"form-label small text-muted\">PIX Copia e Cola (Mercado Pago):</label>\n                <div className=\"input-group\">\n                    <Textarea \n                        id=\"pixCode\" \n                        readOnly \n                        value={currentPixCode} \n                        className=\"form-control form-control-sm small bg-light\" \n                        rows={3} \n                        style={{resize: 'none'}} \n                    />\n                    <button className=\"btn btn-secondary\" type=\"button\" onClick={handleCopyPixCode} aria-label=\"Copiar código PIX\">\n                        <ClipboardCopy className=\"h-4 w-4\" />\n                    </button>\n                </div>\n              </div>\n              \n              <p className=\"text-center fw-semibold fs-5 text-dark\">Valor Total: R$ {currentTotalAmount.toFixed(2).replace('.', ',')}</p>\n              \n              <div className=\"alert alert-info small d-flex align-items-start gap-2\">\n                <Info className=\"h-5 w-5 flex-shrink-0 mt-1\" />\n                <div>\n                    <strong className=\"d-block\">Aguardando Pagamento</strong>\n                    <p className=\"mb-1\">Após efetuar o pagamento PIX, a confirmação será processada automaticamente pelo nosso sistema (via webhook). Você pode usar o botão abaixo para uma verificação manual.</p>\n                    <p className=\"mb-0\">Se você fechar esta página, pode acompanhar o status da sua compra através do seu e-mail ou contato com o organizador caso tenha problemas.</p>\n                </div>\n              </div>\n\n              <button onClick={handleCheckPaymentStatus} className=\"btn btn-secondary w-100 d-flex align-items-center justify-content-center gap-2\" disabled={isCheckingStatus}>\n                {isCheckingStatus ? <Loader2 className=\"me-2 h-4 w-4 animate-spin\" /> : <RefreshCw className=\"me-2 h-4 w-4\" />}\n                Verificar Status\n              </button>\n\n              <button onClick={() => resetFormAndHideDetails(true)} className=\"btn btn-dark w-100 text-white\" disabled={isProcessing || isCheckingStatus}>\n                Voltar e Alterar Dados (Cancela este PIX)\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"card shadow-xl rounded-3 mx-auto\" style={{maxWidth: '550px'}}>\n      <div className=\"card-header p-4 bg-light\">\n        <h2 className=\"card-title fs-3 text-center text-primary d-flex align-items-center justify-content-center gap-2 mb-0\">\n            <ShoppingCart className=\"h-8 w-8\" /> Comprar Ingresso\n        </h2>\n        <p className=\"card-text text-center text-muted small pt-1\">\n          Preencha seus dados para adquirir ingressos para \"{event.nome_evento}\".\n        </p>\n      </div>\n      <div className=\"card-body p-4\">\n        <form onSubmit={handleSubmit(onSubmit)} className=\"needs-validation\" noValidate>\n          <div className=\"mb-3\">\n            <label htmlFor=\"nome_comprador\" className=\"form-label fw-medium\">Nome Completo</label>\n            <input id=\"nome_comprador\" {...register('nome_comprador')} className={`form-control ${errors.nome_comprador ? 'is-invalid' : ''}`} />\n            {errors.nome_comprador && <div className=\"invalid-feedback\">{errors.nome_comprador.message}</div>}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"email_comprador\" className=\"form-label fw-medium\">E-mail</label>\n            <input id=\"email_comprador\" type=\"email\" {...register('email_comprador')} className={`form-control ${errors.email_comprador ? 'is-invalid' : ''}`} />\n            {errors.email_comprador && <div className=\"invalid-feedback\">{errors.email_comprador.message}</div>}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"whatsapp\" className=\"form-label fw-medium\">WhatsApp (somente números)</label>\n            <input id=\"whatsapp\" type=\"tel\" {...register('whatsapp')} className={`form-control ${errors.whatsapp ? 'is-invalid' : ''}`} placeholder=\"Ex: 11988887777\" />\n            {errors.whatsapp && <div className=\"invalid-feedback\">{errors.whatsapp.message}</div>}\n          </div>\n\n          <div className=\"mb-3\">\n            <label htmlFor=\"quantidade\" className=\"form-label fw-medium\">Quantidade de Ingressos</label>\n             <Controller\n                name=\"quantidade\"\n                control={control}\n                defaultValue={1}\n                render={({ field }) => (\n                  <Select\n                    onValueChange={(value) => field.onChange(parseInt(value))}\n                    value={field.value?.toString()}\n                    disabled={maxTickets === 0}\n                  >\n                    <SelectTrigger id=\"quantidade\" className={cn(\"form-select w-100\", errors.quantidade && \"is-invalid\")}> {/* ShadCN with BS classes */}\n                      <SelectValue placeholder=\"Selecione a quantidade\" />\n                    </SelectTrigger>\n                    <SelectContent> {/* ShadCN Content */}\n                      {Array.from({ length: maxTickets }, (_, i) => i + 1).map(num => (\n                        <SelectItem key={num} value={num.toString()}>\n                          {num} ingresso{num > 1 ? 's' : ''}\n                        </SelectItem>\n                      ))}\n                      {maxTickets === 0 && <SelectItem value=\"0\" disabled>Esgotado</SelectItem>}\n                    </SelectContent>\n                  </Select>\n                )}\n              />\n            {errors.quantidade && <div className=\"invalid-feedback d-block\">{errors.quantidade.message}</div>}\n            {maxTickets === 0 && !errors.quantidade && <div className=\"text-danger small mt-1\">Não há ingressos disponíveis.</div>}\n          </div>\n          \n          <div className=\"text-end small text-muted pt-2\">\n            <p className=\"mb-0\">Ingressos: R$ {totalEventPrice.toFixed(2).replace('.', ',')}</p>\n            <p className=\"mb-0\">Taxa de Serviço: R$ {totalServiceFee.toFixed(2).replace('.', ',')}</p>\n          </div>\n          <div className=\"fs-5 fw-semibold text-end text-primary mb-3\">\n            Total: R$ {finalPurchaseAmount.toFixed(2).replace('.', ',')}\n          </div>\n\n          <button type=\"submit\" className=\"btn btn-accent w-100 btn-lg fw-semibold d-flex align-items-center justify-content-center gap-2\" disabled={isProcessing || maxTickets === 0}>\n            {isProcessing ? <Loader2 className=\"me-2 h-5 w-5 animate-spin\" /> : <CreditCard className=\"me-2 h-5 w-5\" />}\n            Gerar PIX para Pagamento\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}